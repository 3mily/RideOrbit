<h1>Map Page</h1>
<h1>Hello, <%= @user.firstname %></h1>

<div class="input-control switch">
    <label>
        <input type="checkbox" />
        <span class="check"></span>
    </label>
</div>

<h3>Select A Commute (Driver)</h3>
<select id="commute" onchange="calcInitRoute()">
  <option disabled selected> -- select a commute -- </option>
  <% @user.drivercommutes.each_with_index do |commute,index| %>
    <option value="<%=index%>"><%=index%> <%= commute.origin_name%> to <%= commute.destination_name%></option>
  <% end %>
</select>

<script type="text/javascript">
      var map;
      var directionsService = new google.maps.DirectionsService();
      var directionsDisplay = new google.maps.DirectionsRenderer();
      var drivercommutesOriginsArray = []; 
      var drivercommutesDestinationsArray = [];
      var bounds; //grab bounds for map
      var iconImg; //url for custom icon
      var responseCommutes; //response objects returned from polling our db
      var currentlyBouncing = null; //bounce animation tracker default to null
      var contentString;
      var commute;
      var start;
      var end;
      var waypts = [];
      var allOverlays = [];

      function initialize() {
        initMap();
        directionsDisplay.setMap(map);
        directionsDisplay.setPanel(document.getElementById('directions-panel'));

        <% @user.drivercommutes.each do |commute| %>
          drivercommutesOriginsArray.push(<%=raw commute.origin.to_json %>);
          drivercommutesDestinationsArray.push(<%=raw commute.destination.to_json %>);
        <% end %>

        google.maps.event.addListener(map, 'idle', function() {
          bounds = map.getBounds();
          $.ajax({
                    url: '/api/passengercommutes',
                    method: 'get',
                    dataType: 'json',
                    data: bounds.toString(),
                    success: function(response) {
                        responseCommutes = response;
                        initCommutes();
                        console.log(response);
                    },
                });
        });
        $(document.body).on("click", ".redraw", function(e){
          var lat = this.getAttribute("data-lat");
          var lng = this.getAttribute("data-lng");
          var waypt = new google.maps.LatLng(lat, lng);
          console.log(waypt);
          waypts.push({
          location:waypt,
            stopover:true
          });
          console.log(waypts);
          calcInitRoute();
        })
      }

      function calcInitRoute() {
        removeCircles();
        grabStartEnd();
        addCircles(start);
        addCircles(end);
        var request = {
            origin:start,
            destination:end,
            waypoints:waypts,
            optimizeWaypoints: true,
            travelMode: google.maps.TravelMode.DRIVING
        };
        directionsService.route(request, function(response, status) {
          if (status == google.maps.DirectionsStatus.OK) {
            directionsDisplay.setDirections(response);
          }
        });
      }

      function addCircles(place){
        var searchOptions = {
          strokeColor: '#FF0000',
          strokeOpacity: 0.8,
          strokeWeight: 0,
          fillColor: '#F15A24',
          fillOpacity: 0.2,
          map: map,
          center: place,
          radius: 1000
        };
        circles = new google.maps.Circle(searchOptions);
        allOverlays.push(circles);
      }
      function removeCircles(){
        if (start) {
          for (var i=0; i < allOverlays.length; i++)
          {
            allOverlays[i].setMap(null);
          }
          allOverlays = [];
        }
      }

      function grabStartEnd() {
        commute = document.getElementById('commute').value;
        start = new google.maps.LatLng(drivercommutesOriginsArray[commute][0], drivercommutesOriginsArray[commute][1]); 
        end = new google.maps.LatLng(drivercommutesDestinationsArray[commute][0], drivercommutesDestinationsArray[commute][1]);
      }

      function initCommutes() {
        for (var i = 0, len = responseCommutes.length; i < len; i++) {
          addCommute(i);
        }
      }

      function addCommuteMarker(idx, place) {
        selectIconImg(place);
        responseCommutes[idx][place].marker = new google.maps.Marker({
          position: new google.maps.LatLng(responseCommutes[idx][place][0], responseCommutes[idx][place][1]),
          icon: iconImg,
          map: map
        });
        createInfoWindow(idx,place);
        addBounceToMarker(idx,place);
      }

      function addBounceToMarker(idx,place) {
        google.maps.event.addListener(responseCommutes[idx][place].marker, 'click', function () {
          if (currentlyBouncing) {
            currentlyBouncing.origin.marker.setAnimation(null);
            currentlyBouncing.destination.marker.setAnimation(null);
          }
          currentlyBouncing = responseCommutes[idx];
          currentlyBouncing.origin.marker.setAnimation(google.maps.Animation.BOUNCE);
          currentlyBouncing.destination.marker.setAnimation(google.maps.Animation.BOUNCE);
        });
      }

      function createInfoWindow(idx,place) {
        contentString = '<div>'+'Name: ' + responseCommutes[idx]['user_info']['name'] +'<br>'+
                        'Email: ' + responseCommutes[idx]['user_info']['email'] +'<br>'+
                        'Phone: ' + responseCommutes[idx]['user_info']['name'] +'<br>'+
                        '<a href="#">View Profile</a>'+'<br>'+
                        '<button class="redraw" data-lat="' + responseCommutes[idx][place][0] + '" data-lng="' + responseCommutes[idx][place][1] + '">Redraw Route</button>'
                        '</div>';
        var infowindow = new google.maps.InfoWindow({
          content: contentString
        });

        google.maps.event.addListener(responseCommutes[idx][place].marker, 'click', function() {
          infowindow.open(map,responseCommutes[idx][place].marker);
        });
      }

      function selectIconImg(place) {
        if (place === 'origin'){
          iconImg = 'http://ecir.mit.edu/templates/rt_clarion/images/icons/icon-person.png'
        }
        else{
          iconImg = 'http://www.wholeperson-counseling.org/gif/point-l.gif'
        }
      }

      function addCommute(idx) {
        addCommuteMarker(idx, 'origin');
        addCommuteMarker(idx, 'destination');
      } 

      function initMap() {
        var mapOptions = {
          center: { lat: 49.282043, lng: -123.108162},
          zoom: 11
        };
        map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
      }

      function hookRedrawRoute() {
        
      }

      google.maps.event.addDomListener(window, 'load', initialize);
</script>

<div id="directions-panel"></div>
<div id="map-canvas"></div>
